-- In this SQL, I am querying a database to quantify statistics about order and customer data.
-- The following database was used for the analysis: https://www.dropbox.com/s/cvsasmtr8syq2c2/BIT_DB?dl=0

--How many orders were placed in January?

SELECT COUNT(Quantity)
FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND length (orderID) = 6
; 

--How many of those orders were for an iPhone?

SELECT COUNT(Quantity)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND orderID <> 'Order ID'
AND length(orderID)=6
;

--Select the customer account numbers for all the orders that were placed in February.

SELECT distinct acctnum FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE order_ID <> 'Order ID'
AND length (order_ID) = 6
;

--Which product was the cheapest one sold in January, and what was the price?

/*SELECT distinct product, price 
FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND length (orderID) = 6
ORDER BY price asc LIMIT 1;*/

--or

SELECT distinct Product,price FROM BIT_DB.JanSales
WHERE price in (SELECT MIN(price) FROM BIT_DB.JanSales)
AND Product <> ''
AND Product <> 'Product'
AND price <> ''
AND price <>'Price Each'
;

--What is the total revenue for January?
SELECT ROUND (SUM(quantity*price),2) AS total_revenue
FROM BIT_DB.JanSales
WHERE price <> ''
AND price <>'Price Each'
;

--What is the total revenue for each product sold in January?
SELECT product, sum(quantity)*price total_revenue
FROM BIT_DB.JanSales
WHERE Product <> ''
AND Product <> 'Product'
AND price <> ''
AND price <>'Price Each'
GROUP BY product
;

--What were the top 5 products that generated the highest revenue in March?
SELECT product, sum(quantity)*price total_revenue
FROM BIT_DB.MarSales
WHERE Product <> ''
AND Product <> 'Product'
AND price <> ''
AND price <>'Price Each'
GROUP BY product
ORDER BY total_revenue desc LIMIT 5
;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price total_revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND orderID <> 'Order ID'
AND length (orderID) = 6
AND Product <> ''
AND Product <> 'Product'
AND price <> ''
AND price <>'Price Each'
GROUP BY Product
; 

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(DISTINCT customers.acctnum) num_customers, round(avg(quantity*price),2) average_spent
FROM BIT_DB.customers
RIGHT JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE orderID <> 'Order ID'
AND length (orderID) = 6
AND FebSales.quantity > 2
;

--Which products were sold in Los Angeles in February, and how many of each were sold?
SELECT Product, SUM(quantity) 
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT location, count(orderID) orders
FROM BIT_DB.JanSales
WHERE location like '%New York%'
AND orderID <> ''
AND orderID <> 'Order ID' 
GROUP BY location
HAVING orders >2
ORDER BY orders asc
;

--How many of each type of headphone were sold in February?
SELECT Product, sum(quantity) quantity
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP BY Product
;

--What was the average amount spent per account in February? 
SELECT round(sum(price*quantity)/(count(acctnum)),2) avg
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.Customers
ON customers.order_id = FebSales.orderID
WHERE quantity <> 'Quantity Ordered'
AND price <> 'Price Each'
;

--What was the average quantity of products purchased per account in February? 
SELECT SUM(Quantity)/count(acctnum) avg
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE quantity <> 'Quantity Ordered'
;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT distinct product, sum((Quantity*price)) rev
FROM BIT_DB.JanSales
WHERE Quantity <> 'Quantity Ordered'
AND price <> 'Price Each'
GROUP BY Product 
order by rev desc
limit 1
;
